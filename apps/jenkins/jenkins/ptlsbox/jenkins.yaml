---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: jenkins
  namespace: jenkins
spec:
  chart:
    spec:
      chart: jenkins
      version: 4.6.6
      sourceRef:
        kind: HelmRepository
        name: jenkins
        namespace: jenkins
  values:
    controller:
      # image version is managed in jenkins-controller-version.yaml
      containerSecurityContext:
        runAsUser: 0
        runAsGroup: 0
        readOnlyRootFilesystem: false
        allowPrivilegeEscalation: true
      ingress:
        hostName: sds-sandbox-build.hmcts.net
      secondaryingress:
        hostName: static-sds-sandbox-build.hmcts.net
      containerEnv:
        - name: ENVIRONMENT
          value: "sandbox"
        - name: AZURE_KEYVAULT_URL
          value: https://ptlsbox.vault.azure.net
      JCasC:
        configScripts:
          welcome-message: |
            jenkins:
              systemMessage: >-
                  This jenkins is managed by configuration as code, update <a
                  href="https://github.com/hmcts/sds-flux-config/blob/master/k8s/namespaces/jenkins/patches/ptlsbox/cluster-00/jenkins.yaml">here</a>
          resource-root: |
            unclassified:
              resourceRoot:
                url: "https://static-sds-sandbox-build.hmcts.net/"
          env-vars: |
            jenkins:
              globalNodeProperties:
                - envVars:
                    env:
                      - key: INFRA_VAULT_NAME
                        value: ptlsbox
                      - key: JENKINS_SUBSCRIPTION_NAME
                        value: DTS-SHAREDSERVICESPTL-SBOX
                      - key: JAVA_OPTS
                        value: -Xmx2g -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
                      - key: GRADLE_OPTS
                        value: -Xmx2g -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
                      - key: REGISTRY_NAME
                        value: sdshmctspublicsbox
                      - key: SBOX_AKS_CLUSTER_NAME
                        value: ss-sbox-01-aks
                      - key: SBOX_AKS_RESOURCE_GROUP
                        value: ss-sbox-01-rg
                      - key: AKS_PREVIEW_SUBSCRIPTION_NAME
                        value: DTS-SHAREDSERVICES-SBOX
                      - key: AKS_PREVIEW_SUBSCRIPTION_ID
                        value: a8140a9e-f1b0-481f-a4de-09e2ee23f7ab
                      - key: AKS_AAT_SUBSCRIPTION_NAME
                        value: DTS-SHAREDSERVICES-SBOX
                      - key: AKS_AAT_SUBSCRIPTION_ID
                        value: a8140a9e-f1b0-481f-a4de-09e2ee23f7ab
                      - key : AAT_AKS_KEY_VAULT
                        value: dtssharedservicessboxkv
                      - key: AKS_PROD_SUBSCRIPTION_NAME
                        value: DTS-SHAREDSERVICES-SBOX
                      - key: AKS_SBOX_SUBSCRIPTION_ID
                        value: a8140a9e-f1b0-481f-a4de-09e2ee23f7ab
                      - key: AKS_PROD_SUBSCRIPTION_ID
                        value: a8140a9e-f1b0-481f-a4de-09e2ee23f7ab
                      - key: PIPELINE_METRICS_URL
                        value: https://sds-jenkins-pipeline-metrics-sbox.documents.azure.com/
                      - key: TF_STATE_STORAGE_TEMPLATE
                        value: sdsstate
                      - key: TF_STATE_RG_TEMPLATE
                        value: jenkins-state
                      - key: TF_STATE_CONTAINER_TEMPLATE
                        value: "tfstate-"
                      - key: NONPROD_ENVIRONMENT_NAME
                        value: sbox
                      - key: NONPROD_SUBSCRIPTION_NAME
                        value: sbox
                      - key: PROD_ENVIRONMENT_NAME
                        value: sbox
                      - key: PREVIEW_ENVIRONMENT_NAME
                        value: sbox
                      - key: PROD_SUBSCRIPTION_NAME
                        value: sbox
                      - key: JENKINS_CONFIG_REPO
                        value: sds-jenkins-config
                      - key: BUSINESS_AREA_TAG
                        value: Cross-Cutting
          views: |
            jenkins:
              views:
                - all:
                    name: all
                - buildMonitor:
                    includeRegex: >-
                      ^HMCTS_.*Platform.*\/(sds-toffee-recipes-service|sds-toffee-frontend|sds-toffee-shared-infrastructure)\/master
                    name: Platform
                    recurse: true
                    title: Platform
                - buildMonitor:
                    includeRegex: >-
                      ^HMCTS_.*PIP-.*\/.+\/master
                    name: PIP
                    recurse: true
                    title: Publishing & Information Dashboard
                - buildMonitor:
                    includeRegex: >-
                      ^HMCTS_.*VH-.*\/.+\/master
                    name: VH
                    recurse: true
                    title: Video Hearings Dashboard
                - buildMonitor:
                    includeRegex: >-
                      ^HMCTS_.*HMI-.*\/.+\/master
                    name: HMI
                    recurse: true
                    title: Hearing Management Interface
                - buildMonitor:
                    includeRegex: >-
                      ^HMCTS.*\/lgy-.*\/master
                    name: Legacy
                    recurse: true
                    title: DTS Legacy Apps
          authentication: |
            jenkins:
              securityRealm:
                azure:
                  cacheDuration: 3600
                  clientId: "ff4a892c-e0f0-49b0-a8f7-3ab95a236562"
                  clientSecret: "$${jenkins-client-secret}"
                  tenant: "531ff96d-0ae9-462a-8d2d-bec7c0b42082"
          location: |
            unclassified:
              location:
                adminAddress: jenkins-reform@hmcts.net
                url: 'https://sds-sandbox-build.hmcts.net'
          azure-key-vault: |
            unclassified:
              azureKeyVault:
                keyVaultURL: https://ptlsbox.vault.azure.net
                credentialID: jenkins-managed-identity
          kubernetes-agent: |
            jenkins:
              clouds:
                - kubernetes:
                    addMasterProxyEnvVars: true
                    containerCap: 40
                    containerCapStr: "40"
                    jenkinsTunnel: "jenkins-agent:50000"
                    jenkinsUrl: "http://jenkins:8080"
                    maxRequestsPerHost: 32
                    maxRequestsPerHostStr: "32"
                    name: "kubernetes"
                    namespace: "jenkins"
                    podLabels:
                    - key: "aadpodidbinding"
                      value: "jenkins"
                    - key: "cloud"
                      value: "kubernetes"
                    templates:
                    - activeDeadlineSeconds: 120
                      activeDeadlineSecondsStr: "120"
                      containers:
                      - args: "/bin/sh -c cat"
                        command: "/tini --"
                        image: "hmctspublic.azurecr.io/jenkins/build-agent:db8a7c"
                        livenessProbe:
                          failureThreshold: 3
                          initialDelaySeconds: 150
                          periodSeconds: 15
                          successThreshold: 1
                          timeoutSeconds: 5
                        name: "inbound-agent"
                        resourceLimitCpu: "4000m"
                        resourceLimitMemory: "12Gi"
                        resourceRequestCpu: "2000m"
                        resourceRequestMemory: "4Gi"
                        ttyEnabled: true
                        workingDir: "/home/jenkins/agent"
                      - image: "hmctspublic.azurecr.io/jenkins/minimal-agent:db8a7c"
                        livenessProbe:
                          failureThreshold: 3
                          initialDelaySeconds: 150
                          periodSeconds: 15
                          successThreshold: 1
                          timeoutSeconds: 5
                        name: "jnlp"
                        resourceLimitCpu: "2000m"
                        resourceLimitMemory: "6Gi"
                        resourceRequestCpu: "1000m"
                        resourceRequestMemory: "1Gi"
                        ttyEnabled: false
                        workingDir: "/home/jenkins/agent"
                      hostNetwork: false
                      idleMinutes: 10
                      idleMinutesStr: "10"
                      instanceCap: 40
                      instanceCapStr: "40"
                      label: "k8s-agent"
                      name: "k8s-inbound-agent"
                      namespace: "jenkins"
                      podRetention: "never"
                      serviceAccount: "jenkins"
                      supplementalGroups: "118"
                      volumes:
                      - hostPathVolume:
                          hostPath: "/var/run/docker.sock"
                          mountPath: "/var/run/docker.sock"
                      - emptyDirVolume:
                          memory: false
                          mountPath: "/opt/jenkins"
                      - emptyDirVolume:
                          memory: false
                          mountPath: "/home/jenkins/.ssh"
                      - hostPathVolume:
                          hostPath: "/tmp/jenkins-agent"
                          mountPath: "/tmp/jenkins-agent"
                      yaml: |-
                        metadata:
                          labels:
                            app.kubernetes.io/name: jenkins
                            app.kubernetes.io/component: jenkins-agent
                        spec:
                          securityContext:
                            runAsUser: 1000
                            fsGroup: 118
                          initContainers:
                          - name: init-agent
                            image: hmctspublic.azurecr.io/jenkins/minimal-agent:dbg8js
                            command:
                              - /bin/sh
                              - -c
                              - "chown 0:118 /tmp/jenkins-agent && chmod g+rwx /tmp/jenkins-agent"
                            volumeMounts:
                              - mountPath: /tmp/jenkins-agent
                                name: volume-3
                            securityContext:
                              runAsUser: 0
                              runAsGroup: 0
                              privileged: true
                          affinity:
                            podAntiAffinity:
                              requiredDuringSchedulingIgnoredDuringExecution:
                                - labelSelector:
                                    matchExpressions:
                                      - key: app.kubernetes.io/component
                                        operator: In
                                        values:
                                          - jenkins-master
                                  topologyKey: "kubernetes.io/hostname"
                      yamlMergeStrategy: "merge"
                      yamls:
                      - |-
                        metadata:
                          labels:
                            app.kubernetes.io/name: jenkins
                            app.kubernetes.io/component: jenkins-agent
                        spec:
                          securityContext:
                            runAsUser: 1000
                            fsGroup: 118
                          initContainers:
                          - name: init-agent
                            image: hmctspublic.azurecr.io/jenkins/minimal-agent:db6hu6
                            command:
                              - /bin/sh
                              - -c
                              - "chown 0:118 /tmp/jenkins-agent && chmod g+rwx /tmp/jenkins-agent"
                            volumeMounts:
                              - mountPath: /tmp/jenkins-agent
                                name: volume-3
                            securityContext:
                              runAsUser: 0
                              runAsGroup: 0
                              privileged: true
                          affinity:
                            podAntiAffinity:
                              requiredDuringSchedulingIgnoredDuringExecution:
                                - labelSelector:
                                    matchExpressions:
                                      - key: app.kubernetes.io/component
                                        operator: In
                                        values:
                                          - jenkins-master
                                  topologyKey: "kubernetes.io/hostname"
